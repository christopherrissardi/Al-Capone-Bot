from dataclasses import replace
import dataclasses
from ntpath import join
from optparse import Values
import discord
import json
import requests
import os
from googletrans import Translator
from typing import Text
from discord.ext import commands

client = commands.Bot(command_prefix="/", case_insensitive=True, help_command=None)

@client.event
async def on_ready():
    activity = discord.Game(name='Arctic Bot | /ajuda', type=3)
    await client.change_presence(status=discord.Status.dnd, activity=activity)
    print("Conectando, por favor, aguarde...")

@client.event
async def on_message(message):
    if isinstance(message.channel, discord.DMChannel):
        return
    await client.process_commands(message)

@client.command()
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit=amount)

@clear.error
async def clear_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArguments):
        await ctx.send('...')

@client.event
async def on_member_join(member):
    embed=discord.Embed(
        title="Bem vindo!",
        description="{member.mention} "
    )
    
#--------------------------------------------------------[DISPON√çVEIS]-------------------------------------------------------#

@client.command() #CONSULTAS DISPON√çVEIS
async def consulta(ctx):
    embed = discord.Embed(title='',)

    embed.add_field(name="üïµüèª‚Äç‚ôÇÔ∏è CONSULTA POR NOME",
                    value="Use o comando `/nome` {NOME COMPLETO} para realizar a consulta.", inline=False)
    embed.add_field(name="üëΩ CONSULTA POR CPF",
                    value="Use o comando `/cpf` {CPF DA PESSOA} para a consultar os dados.", inline=False)
    embed.add_field(name="üìµ CONSULTA POR TELEFONE",
                    value="Use o comando `/telefone` {TELEFONE} para realizar a consulta.", inline=False)
    embed.add_field(name="üè® CONSULTA DE CNPJ",
                    value="Use o comando `/cnpj` {CNPJ} para consultar os dados.", inline=False)
    embed.add_field(name="üöò CONSULTA POR PLACA",
                    value="Use o comando `/placa` {PLACA DO VE√çCULO} para realizar a consulta.", inline=False)
    embed.add_field(name="üìå CONSULTA DE IP",
                    value="Use o comando `/ip` {IP} para realizar a consulta do IP.", inline=False)
    embed.add_field(name="üí≥ CONSULTA DE BIN",
                    value="Use o comando `/bin` {N√öMERO DA BIN} para realizar a consulta.", inline=False)
    embed.add_field(name="üì´ CONSULTA DE CEP",
                    value="Use o comando `/cep` {CEP DA RUA} para realizar a consulta.", inline=False)
    embed.add_field(name="ü¶† CONSULTA DE COVID19",
                    value="Use o comando `/covid` {SIGLA DO ESTADO} para realizar a consulta.", inline=False)
    embed.add_field(name="üè¶ CONSULTA DE C√ìDIGO BANC√ÅRIO",
                    value="Use o comando `/banco` {C√ìDIGO DO BANCO} para realizar a consulta.", inline=False)
    embed.add_field(name="üíæ CONSULTA DE SITES",
                    value="Use o comando `/site` {URL DO SITE} para realizar a consulta.", inline=False)
    embed.add_field(name="üì¥ CONSULTA DE OPERADORA",
                    value="Use o comando `/operadora` {N√öMERO DE CELULAR} para realizar a consulta.", inline=False)    
    embed.add_field(name="ü§ñ CONSULTA DE E-MAIL",
                    value="Use o comando `/email` {EMAIL} para realizar a consulta.", inline=False)    
    embed.set_image(url='https://i.gifer.com/Cewn.gif')
    embed.set_author(name='Arctic', icon_url='')
    embed.set_footer(text='Arctic ¬© All Rights Reserved', icon_url='')
    await ctx.send(embed=embed)

#--------------------------------------------------------[AJUDA]-------------------------------------------------------#

@client.command() #DIVERSOS
async def diversos(ctx):
    embed = discord.Embed(title='')
    
    embed.add_field(name="üí∞ CONSULTA DE COTA√á√ÉO",
                    value="Use o comando `/cotacao` {PAR DE MOEDA} para realizar a consulta.", inline=False)
    embed.add_field(name="üèôÔ∏è CONSULTA DE CIDADE POR DDD",
                    value="Use o comando `/ddd` {DDD} para realizar a consulta do IP.", inline=False)
    embed.add_field(name="üíº CONSULTA DE FERIADOS",
                    value="Use o comando `/feriados` {ANO} para realizar a consulta.", inline=False)
    embed.set_author(name='Arctic', icon_url='')
    embed.set_footer(text='Arctic ¬© All Rights Reserved', icon_url='')
    await ctx.send(embed=embed)

#--------------------------------------------------------[AJUDA]-------------------------------------------------------#

@client.command() #COMANDO DE AJUDA
async def ajuda(ctx):
    embed = discord.Embed(title='')
    
    embed.add_field(name="„Ö§", value='Ol√°, estou aqui para te ajudar! Aqui est√° algum dos comandos que o Arctic possui. Ficou com alguma d√∫vida em rela√ß√£o aos comandos abaixo? Digite `/[NOME DO COMANDO]`. Exemplo: `/admin`  ', inline=False)
    embed.add_field(name="üîê Modera√ß√£o", value='Use o comando `/admin` para ver os comandos administrativos. Comando de modera√ß√£o existentes: `/kick`, `/ban`, `/unban`, `/unmute`, `/role`, `/mute`, `/clear` ', inline=False)
    embed.add_field(name="üîç Consultas", value='Use o comando `/consulta` para obter mais informa√ß√µes. Comandos de consultas dispon√≠veis: `/nome`, `/cpf`, `/telefone`, `/cnpj`, `/placa`, `/ip` `/bin`, `/cep`, `/covid`, `/banco`, `/site`, `/operadora`, `/email`.', inline=False)
    embed.add_field(name="üéµ M√∫sicas", value='Use o comando `/musica` para vizualizar os comandos. Comandos acess√≠veis a classe: `/play`, `/stop`, `/pause`, `/resume`, `/back`, `/skip`, `/disconnect`', inline=False)
    embed.add_field(name="ü™ê Informa√ß√µes", value='Use o comando `/info` para ver os comandos dispon√≠veis. Comandos existentes: `/ajuda`, `/ping`, `/git`, `/serverinfo`, `/userinfo`', inline=False)
    embed.add_field(name="üéì Diversos", value='Use o comando `/diversos` para vizualizar os comandos. Comandos dispon√≠veis: `/cotacao`, `/ddd`, `/feriados`, `/traduzir`', inline=False)    
    embed.add_field(name="üâê Tradutor", value='Use o comando `/traduzir` "Texto" L√≠ngua (Exemplo: en, es, pt, ru)', inline=False)
    embed.set_image(url="https://i.imgur.com/Qkn02zM.jpg")
    embed.set_author(name='Arctic Helper', icon_url='')
    await ctx.author.send(embed=embed); 

#--------------------------------------------------------[NOME]-------------------------------------------------------#

@client.command() #CONSULTA DE NOME
async def nome(ctx):
    embed = discord.Embed(title='', description='A Consulta por ***NOME*** estar√° dispon√≠vel em breve. No momento,\nestamos com ***aus√™ncia*** das APIs de consultas por ***nome***!',)

    embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE NOME„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[CPF]---------------------------------------------------------#

@client.command() #CONSULTA DE CPF
async def cpf(ctx):

    embed = discord.Embed(title='', description='A Consulta por ***CPF*** estar√° dispon√≠vel em breve. No momento,\nestamos com ***aus√™ncia*** das APIs de consultas por ***CPF!***',)

    embed.add_field(name="‚Ä¢ CPF", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CNS", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ RG", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ T√çTULO ELEITORAL", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ NOME", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ NASCIMENTO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ IDADE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ SIGNO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ SEXO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ COR", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ M√ÉE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ PAI", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CIDADE DE NASCIMENTO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ ESTADO DE NASCIMENTO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ LOGRADOURO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ N√öMERO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ COMPLEMENTO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ BAIRRO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CIDADE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ ESTADO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ PA√çS", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CEP", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ E-MAIL", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ TELEFONE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
    embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE CPF„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[TELEFONE]-------------------------------------------------------------#

@client.command() #CONSULTA DE TELEFONE
async def telefone(ctx):
    embed = discord.Embed(title='', description='A Consulta por ***TELEFONE*** estar√° dispon√≠vel em breve. No momento,\nestamos com ***aus√™ncia*** das APIs de consultas por ***telefone!***',)

    embed.add_field(name="‚Ä¢ TELEFONE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ NOME", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CPF/CNPJ", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ LOGRADOURO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ N√öMERO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ COMPLEMENTO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ BAIRRO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CIDADE", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ ESTADO", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="‚Ä¢ CEP", value='SEM INFORMA√á√ÉO', inline=False)
    embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
    embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE TELEFONE„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[PLACA]-------------------------------------------------------------#

@client.command()
async def placa(ctx, placa = None):
    data = requests.get('https://apicarros.com/v1/consulta/{placa}/json', verify = False).json() # JSQ7436    
    
    try:
        embed = discord.Embed(title='')
        
        validatePlaca = data["placa"] if data["placa"] != "" else "N√£o encontrado"
        validateMarca = data["marca"] if data["marca"] != "Contacte o suporte 44-991559009 ou wa.me/5544991559009 " else "N√£o encontrado"
        validateAno = data["ano"] if data["ano"] != "" else "N√£o encontrado"
        validateDataAtt = data["data"] if data["data"] != "" else "N√£o encontrado"
        validateModelo = data["modelo"] if data["modelo"] != "Contacte o suporte 44-991559009 ou wa.me/5544991559009" else "N√£o encontrado"
        validateAnoModelo = data["anoModelo"] if data["anoModelo"] != "" else "N√£o encontrado"
        validateCor = data["cor"] if data["cor"] != "Contacte o suporte 44-991559009 ou wa.me/5544991559009" else "N√£o encontrado"
        validateChassi = data["chassi"] if data["chassi"] != "" else "N√£o encontrado"
        validateMunicipioPlaca = data["municipio"] if data["municipio"] != "Contacte o suporte 44-991559009 ou wa.me/5544991559009" else "N√£o encontrado"
        validateUfPlaca = data["uf"] if data["uf"] != "" else "N√£o encontrado"
        validateErrosPlaca = data["mensagemRetorno"] if data["mensagemRetorno"] != "Contacte o suporte 44-991559009 ou wa.me/5544991559009" else "N√£o encontrado"
        validateAlarmeAtt = data["dataAtualizacaoAlarme"] if data["dataAtualizacaoAlarme"] != "" else "N√£o encontrado"
        validateModificacao = data["dataAtualizacaoCaracteristicasVeiculo"] if data["dataAtualizacaoCaracteristicasVeiculo"] != "" else "N√£o encontrado"
        validateFurto = data["dataAtualizacaoRouboFurto"] if data["dataAtualizacaoRouboFurto"] != "" else "N√£o encontrado"
        
        embed.add_field(name="‚Ä¢ PLACA", value=validatePlaca, inline=False)
        embed.add_field(name="‚Ä¢ MARCA", value=validateMarca, inline=False)
        embed.add_field(name="‚Ä¢ ANO", value=validateAno, inline=False)
        embed.add_field(name="‚Ä¢ DATA DE ATUALIZA√á√ÉO ", value=validateDataAtt, inline=False)
        embed.add_field(name="‚Ä¢ MODELO", value=validateModelo, inline=False)
        embed.add_field(name="‚Ä¢ ANO DO MODELO", value=validateAnoModelo, inline=False)
        embed.add_field(name="‚Ä¢ COR", value=validateCor, inline=False)
        embed.add_field(name="‚Ä¢ CHASSI", value=validateChassi, inline=False)
        embed.add_field(name="‚Ä¢ CIDADE", value=validateMunicipioPlaca, inline=False)
        embed.add_field(name="‚Ä¢ ESTADO", value=validateUfPlaca, inline=False)
        embed.add_field(name="‚Ä¢ IRREGULARIDADE", value=validateErrosPlaca, inline=False)
        embed.add_field(name="‚Ä¢ ALARME ATUALIZADO EM", value=validateAlarmeAtt, inline=False)
        embed.add_field(name="‚Ä¢ DATA DE MODIFICA√á√ÉO", value=validateModificacao, inline=False)
        embed.add_field(name="‚Ä¢ ATUALIZA√á√ÉO DE FURTO", value=validateFurto, inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE PLACA„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
    
        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (placa == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO PLACA„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/placa` e a {PLACA} que deseja.", value='*Exemplo: `/placa` AAA1234*', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*N√£o utilize pontos, hifens e caracteres especiais*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ERRO AO CONSULTAR PLACA„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[CNPJ]-------------------------------------------------------------#

@client.command() #CONSULTA DE CNPJ
async def cnpj(ctx, cnpj = None):
    data = requests.get(f"https://brasilapi.com.br/api/cnpj/v1/{cnpj}").json()
    
    try:
        embed = discord.Embed(title='')
        
        validateCnpj = data["cnpj"] if data["cnpj"] != "" else "N√£o encontrado"
        validateNome = data["nome_fantasia"] if data["nome_fantasia"] != "" else "N√£o encontrado"
        validateRazao = data["razao_social"] if data["razao_social"] != "" else "N√£o encontrado"
        validateStatus = data["descricao_situacao_cadastral"] if data["descricao_situacao_cadastral"] != "" else "N√£o encontrado"
        validateUf = data["uf"] if data["uf"] != "" else "N√£o encontrado"
        validateComplemento = data["complemento"] if data["complemento"] != "" else "N√£o encontrado"
        validateBairro = data["bairro"] if data["bairro"] != "" else "N√£o encontrado"
        validateNumero = data["numero"] if data["numero"] != "" else "N√£o encontrado"
        validateMunicipio = data["municipio"] if data["municipio"] != "" else "N√£o encontrado"
        validateData = data["data_inicio_atividade"] if data["data_inicio_atividade"] != "" else "N√£o encontrado"
        validateCnae = data["cnae_fiscal_descricao"] if data["cnae_fiscal_descricao"] != "" else "N√£o encontrado"
        validateCnaeCod = data["cnae_fiscal"] if data["cnae_fiscal"] != "" else "N√£o encontrado"
        validateMatriz = data["identificador_matriz_filial"] if data["identificador_matriz_filial"] != "" else "N√£o encontrado"
        validateFilial = data["descricao_motivo_situacao_cadastral"] if data["descricao_motivo_situacao_cadastral"] != "" else "N√£o encontrado"
        validateDataSituacao = data["data_situacao_cadastral"] if data["data_situacao_cadastral"] != "" else "N√£o encontrado"
        validateJuridica = data["codigo_natureza_juridica"] if data["codigo_natureza_juridica"] != "" else "N√£o encontrado"
        validateLogradouro = data["logradouro"] if data["logradouro"] != "" else "N√£o encontrado"
        validateTelefone1 = data["ddd_telefone_1"] if data["ddd_telefone_1"] != "" else "N√£o encontrado"
        validateQualificacao = data["qualificacao_do_responsavel"] if data["qualificacao_do_responsavel"] != "" else "N√£o encontrado"
        validateCapital = data["capital_social"] if data["capital_social"] != "" else "N√£o encontrado"
        validateDescricaoPorte = data["descricao_porte"] if data["descricao_porte"] != "" else "N√£o encontrado"
        validateSimples = data["opcao_pelo_simples"] if data["opcao_pelo_simples"] != "" else "N√£o encontrado"
        validateSimplesDate = data["data_opcao_pelo_simples"] if data["data_opcao_pelo_simples"] != "" else "N√£o encontrado"
        validateCep = data["cep"] if data["cep"] != "" else "N√£o encontrado"
        
        embed.add_field(name="‚Ä¢ CNPJ", value=validateCnpj, inline=False)
        embed.add_field(name="‚Ä¢ NOME FANTASIA", value=validateNome, inline=False)
        embed.add_field(name="‚Ä¢ RAZ√ÉO SOCIAL", value=validateRazao, inline=False)
        embed.add_field(name="‚Ä¢ MATRIZ FILIAL", value=validateMatriz, inline=False)
        embed.add_field(name="‚Ä¢ MOTIVO DA ABERTURA", value=validateFilial, inline=False)
        embed.add_field(name="‚Ä¢ DATA SITUA√á√ÉO CADASTRAL", value=validateDataSituacao, inline=False)
        embed.add_field(name="‚Ä¢ NATUREZA JUR√çDICA", value=validateJuridica, inline=False)
        embed.add_field(name="‚Ä¢ QUALIFICA√á√ÉO DO RESPONS√ÅVEL", value=validateQualificacao, inline=False)
        embed.add_field(name="‚Ä¢ CAPITAL SOCIAL", value=validateCapital, inline=False)
        embed.add_field(name="‚Ä¢ DESCRI√á√ÉO DO PORTE", value=validateDescricaoPorte, inline=False)
        embed.add_field(name="‚Ä¢ OP√á√ÉO PELO SIMPLES", value=validateSimples, inline=False)
        embed.add_field(name="‚Ä¢ DATA OP√á√ÉO PELO SIMPLES", value=validateSimplesDate, inline=False)
        embed.add_field(name="‚Ä¢ STATUS", value=validateStatus, inline=False)
        embed.add_field(name="‚Ä¢ LOGRADOURO", value=validateLogradouro, inline=False)
        embed.add_field(name="‚Ä¢ N√öMERO", value=validateNumero, inline=False)
        embed.add_field(name="‚Ä¢ MUNIC√çPIO", value=validateMunicipio, inline=False)
        embed.add_field(name="‚Ä¢ BAIRRO", value=validateBairro, inline=False)
        embed.add_field(name="‚Ä¢ COMPLEMENTO", value=validateComplemento, inline=False)
        embed.add_field(name="‚Ä¢ CEP", value=validateCep, inline=False)
        embed.add_field(name="‚Ä¢ UF - Unidade Federativa", value=validateUf, inline=False)
        embed.add_field(name="‚Ä¢ TELEFONE ", value=validateTelefone1, inline=False)
        embed.add_field(name="‚Ä¢ DATA DE ABERTURA", value=validateData, inline=False)
        embed.add_field(name="‚Ä¢ CNAE", value=validateCnae, inline=False)
        embed.add_field(name="‚Ä¢ CNAE FISCAL", value=validateCnaeCod, inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE CNPJ„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
    
        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (cnpj == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO CNPJ„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/cnpj` e o {CNPJ} que deseja.", value='*Exemplo: `/cnpj` 12345678901234*', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*N√£o utilize pontos, hifens e caracteres especiais*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§„Ö§CNPJ N√ÉO ENCONTRADO„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[IP]-------------------------------------------------------------#

@client.command() #CONSULTA DE IP
async def ip(ctx, ip = None):
    data = requests.get(f"http://ipwhois.app/json/{ip}").json()
    
    try:
        embed = discord.Embed(title='')

        validateAsn = data["asn"] if data["asn"] != "" else "N√£o encontrado"

        embed.add_field(name="‚Ä¢ IP", value=data['ip'], inline=False)
        embed.add_field(name="‚Ä¢ CIDADE", value=data['city'], inline=False)
        embed.add_field(name="‚Ä¢ ESTADO", value=data['region'], inline=False)
        embed.add_field(name="‚Ä¢ PA√çS", value=data['country'], inline=False)
        embed.add_field(name="‚Ä¢ CONTINENTE", value=data["continent"], inline=False)
        embed.add_field(name="‚Ä¢ LATITUDE", value=data['latitude'], inline=False)
        embed.add_field(name="‚Ä¢ LONGITUDE", value=data['longitude'], inline=False)
        embed.add_field(name="‚Ä¢ PROVEDOR", value=data['isp'], inline=False)
        embed.add_field(name="‚Ä¢ ASN", value=validateAsn, inline=False)
        embed.add_field(name="‚Ä¢ EMPRESA RESPONS√ÅVEL", value=data['org'], inline=False)
        embed.add_field(name="‚Ä¢ TIPO DE CONEX√ÉO", value=data['type'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE IP„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass
         
        embed = discord.Embed(title='')
    
    if (ip == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO IP„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/ip` e o {IP} que deseja.", value='*Exemplo: `/ip` 127.0.0.1*', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§IP N√ÉO ENCONTRADO„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[COVID19]-------------------------------------------------------------#

@client.command() #CONSULTA DE COVID19
async def covid(ctx, covid = None):
    data = requests.get(f"https://covid19-brazil-api.vercel.app/api/report/v1/brazil/uf/{covid}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ ESTADO", value=data['state'], inline=False)
        embed.add_field(name="‚Ä¢ CASOS", value=data['cases'], inline=False)
        embed.add_field(name="‚Ä¢ MORTES", value=data['deaths'], inline=False)
        embed.add_field(name="‚Ä¢ SUSPEITOS", value=data['suspects'], inline=False)
        embed.add_field(name="‚Ä¢ DESCARTADOS", value=data['refuses'], inline=False)
        embed.add_field(name="‚Ä¢ DATA DE ATUALIZA√á√ÉO", value=data['datetime'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE COVID19„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
        
        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (covid == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO COVID„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/covid` e o {ESTADO} que deseja.", value='*Exemplo*: `/covid SP`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*Utilize apenas a sigla do estado correspondente!*', inline=False)
        embed.add_field(name="Estados Brasileiros com suas respectivas siglas:", value='Acre - `AC`\nAlagoas - `AL`\nAmazonas - `AM`\nBahia - `BA`\nCear√° - `CE`\nDistrito Federal - `DF`\nEsp√≠rito Santo - `ES`\nGoi√°s - `GO`\nMaranh√£o - `MA`\nMato Grosso - `MT`\nMato Grosso do Sul - `MS`\nMinas Gerais - `MG`\nPar√° - `PA`\nPara√≠ba - `PB`\nParan√° - `PR`\nPernambuco - `PE`\nPiau√≠ - `PI`\nRio de Janeiro - `RJ`\nRio Grande do Norte - `RN`\nRio Grande do Sul - `RS`\nRond√¥nia - `RO`\nRoraima	- `RR`\nSanta Catarina - `SC`\nS√£o Paulo - `SP`\nSergipe - `SE`\nTocantins - `TO`\n', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§ESTADO INV√ÅLIDO„Ö§„Ö§„Ö§', icon_url='')
       embed.add_field(name="„Ö§", value="*Utilize o comando: `/covid` para obter mais informa√ß√µes.* ", inline=False)
       return await ctx.send(embed=embed)

#--------------------------------------------------------[CEP]-------------------------------------------------------------#

@client.command() #CONSULTA DE CEP
async def cep(ctx, cep = None):
    data = requests.get(f"https://cep.awesomeapi.com.br/json/{cep}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ CEP", value=data['cep'], inline=False)
        embed.add_field(name="‚Ä¢ LOGRADOURO", value=data['address'], inline=False)
        embed.add_field(name="‚Ä¢ BAIRRO", value=data['district'], inline=False)
        embed.add_field(name="‚Ä¢ CIDADE", value=data['city'], inline=False)
        embed.add_field(name="‚Ä¢ ESTADO", value=data['state'], inline=False)
        embed.add_field(name="‚Ä¢ LATITUDE", value=data['lat'], inline=False)
        embed.add_field(name="‚Ä¢ LONGITUDE", value=data['lng'], inline=False)
        embed.add_field(name="‚Ä¢ IBGE", value=data['city_ibge'], inline=False)
        embed.add_field(name="‚Ä¢ DDD", value=data['ddd'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE CEP„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (cep == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO CEP„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/cep` e o {CEP} que deseja.", value='*Exemplo*: `/cep 70150904`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*N√£o utilize pontos, hifens e caracteres especiais*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§CEP N√ÉO ENCONTRADO„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)
   
#--------------------------------------------------------[BANCO]-------------------------------------------------------------#

@client.command() #CONSULTA DE C√ìDIGO BANC√ÅRIO
async def banco(ctx, banco = None):
    data = requests.get(f"https://brasilapi.com.br/api/banks/v1/{banco}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ ISPB", value=data['ispb'], inline=False)
        embed.add_field(name="‚Ä¢ NOME DO BANCO", value=data['name'], inline=False)
        embed.add_field(name="‚Ä¢ C√ìDIGO BANC√ÅRIO", value=data['code'], inline=False)
        embed.add_field(name="‚Ä¢ INFORMA√á√ïES ADICIONAIS", value=data['fullName'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)        
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE BANCO„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
        
        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (banco == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO BANCO„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/banco` e o {C√ìDIGO DO BANCO}", value='*Exemplo*: `/banco 237`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*Utilize apenas o c√≥digo banc√°rio correspondente!*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§C√ìDIGO BANC√ÅRIO N√ÉO ENCONTRADO„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[BIN]-------------------------------------------------------------#

@client.command() #CONSULTA DE BIN
async def bin(ctx, bin = None):
    data = requests.get(
        f"https://api.bincodes.com/bin/?format=json&api_key=c0107d14acda7e1831dfe26ee8e8b3a5&bin={bin}").json()

    try:
        embed = discord.Embed(title='')

        validateSiteBin = data["website"] if data["website"] != "" else "N√£o encontrado"
        validateNumeroTelefoneBin = data["phone"] if data["phone"] != "" else "N√£o encontrado"
        
        embed.add_field(name="‚Ä¢ BIN", value=data['bin'], inline=False)
        embed.add_field(name="‚Ä¢ MODELO", value=data['type'], inline=False)
        embed.add_field(name="‚Ä¢ N√çVEL", value=data['level'], inline=False)
        embed.add_field(name="‚Ä¢ BANDEIRA", value=data['card'], inline=False)
        embed.add_field(name="‚Ä¢ PA√çS", value=data['country'], inline=False)
        embed.add_field(name="‚Ä¢ SIGLA", value=data['countrycode'], inline=False)
        embed.add_field(name="‚Ä¢ BANCO", value=data['bank'], inline=False)
        embed.add_field(name="‚Ä¢ SITE", value=data['website'], inline=False)
        embed.add_field(name="‚Ä¢ TELEFONE", value=data['phone'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE BIN„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (bin == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO BIN„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/bin` e a {BIN} que deseja.", value='*Exemplo*: `/bin 522840`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*N√£o utilize pontos, hifens e caracteres especiais*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§BIN N√ÉO ENCONTRADA„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[SITE]-------------------------------------------------------------#

@client.command() #CONSULTA DE SITE
async def site(ctx, site = None):
    data = requests.get(f"http://ipwhois.app/json/{site}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ IP", value=data['ip'], inline=False)
        embed.add_field(name="‚Ä¢ CIDADE", value=data['city'], inline=False)
        embed.add_field(name="‚Ä¢ ESTADO", value=data['region'], inline=False)
        embed.add_field(name="‚Ä¢ PA√çS", value=data['country'], inline=False)
        embed.add_field(name="‚Ä¢ LATITUDE", value=data['latitude'], inline=False)
        embed.add_field(name="‚Ä¢ LONGITUDE", value=data['longitude'], inline=False)
        embed.add_field(name="‚Ä¢ ORGANIZA√á√ÉO", value=data['isp'], inline=False)
        embed.add_field(name="‚Ä¢ EMPRESA", value=data['org'], inline=False)
        embed.add_field(name="‚Ä¢ FUSO HOR√ÅRIO", value=data['timezone'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE SITE„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (site == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO SITE„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/site` e a {SITE} que deseja.", value='*Exemplo*: `/site google.com`', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§SITE N√ÉO ENCONTRADO„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[OPERADORA]-------------------------------------------------------------#

@client.command() #CONSULTA DE OPERADORA
async def operadora(ctx, operadora = None):
    data = requests.get(f"http://apilayer.net/api/validate?access_key=317fca6d1dc194d6c5e5d16898b63ddf&number={operadora}&country_code=&format=1").json()
    
    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ V√ÅLIDO", value=data['valid'], inline=False)
        embed.add_field(name="‚Ä¢ N√öMERO", value=data['number'], inline=False)
        embed.add_field(name="‚Ä¢ FORMATO INTERNACIONAL", value=data['international_format'], inline=False)
        embed.add_field(name="‚Ä¢ DDI DO PA√çS", value=data['country_prefix'], inline=False)
        embed.add_field(name="‚Ä¢ C√ìDIGO DO PA√çS", value=data['country_code'], inline=False)
        embed.add_field(name="‚Ä¢ NOME DO PA√çS", value=data['country_name'], inline=False)
        embed.add_field(name="‚Ä¢ LOCALIZA√á√ÉO", value=data['location'], inline=False)
        embed.add_field(name="‚Ä¢ OPERADORA/PROVEDOR", value=data['carrier'], inline=False)
        embed.add_field(name="‚Ä¢ LINHA DE DISPOSIT√çVO", value=data['line_type'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CHECKER DE OPERADORA„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (operadora == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO OPERADORA„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/operadora` e a {N√öMERO}", value='*Exemplo*: `/operadora +5511987654321`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*utilize o padr√£o universal.*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§OPERADORA N√ÉO ENCONTRADA„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[EMAIL]-------------------------------------------------------------#

@client.command() #CONSULTA DE E-MAIL
async def email(ctx, email = None):
    data = requests.get(f"http://apilayer.net/api/check?access_key=e3d07653b28027265c15d3218aaaa4c9&email={email}&smtp=1&format=1").json()
    
    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ E-MAIL", value=data['email'], inline=False)
        embed.add_field(name="‚Ä¢ USU√ÅRIO", value=data['user'], inline=False)
        embed.add_field(name="‚Ä¢ DOM√çNIO", value=data['domain'], inline=False)
        embed.add_field(name="‚Ä¢ FORMATO VALIDO", value=data['format_valid'], inline=False)
        embed.add_field(name="‚Ä¢ CORREIO ATIVO", value=data['mx_found'], inline=False)
        embed.add_field(name="‚Ä¢ SMTP DISPON√çVEL", value=data['smtp_check'], inline=False)
        embed.add_field(name="‚Ä¢ FUN√á√ïES ATIVAS", value=data['role'], inline=False)
        embed.add_field(name="‚Ä¢ E-MAIL DISPON√çVEL", value=data['disposable'], inline=False)
        embed.add_field(name="‚Ä¢ GRATUITO", value=data['free'], inline=False)
        embed.add_field(name="‚Ä¢ PONTUA√á√ÉO", value=data['score'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CHECKER DE E-MAIL„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (email == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO EMAIL„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/email` e a {E-MAIL}", value='*Exemplo*: `/email google@gmail.com`', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='E-MAIL N√ÉO ENCONTRADA„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)
   
#--------------------------------------------------------[C0TA√á√ÉO]-------------------------------------------------------------#

@client.command() #COTA√á√ÉO DE MOEDAS
async def cotacao(ctx, cotacao = None):
    data = requests.get(f"https://economia.awesomeapi.com.br/last/{cotacao}").json()
    coin_name = cotacao.replace("-", "")
    
    try:
        embed = discord.Embed(title='')
        
        embed.add_field(name="‚Ä¢ MOEDA A COMPARAR", value=data[coin_name]["code"], inline=False)
        embed.add_field(name="‚Ä¢ MOEDA A SER COMPARADA", value=data[coin_name]["codein"], inline=False)
        embed.add_field(name="‚Ä¢ NOME DAS PARIEDADES", value=data[coin_name]["name"], inline=False)
        embed.add_field(name="‚Ä¢ M√ÅXIMA DO DIA", value=data[coin_name]["high"], inline=False)
        embed.add_field(name="‚Ä¢ M√çNIMA DO DIA", value=data[coin_name]["low"], inline=False)
        embed.add_field(name="‚Ä¢ VARIA√á√ÉO", value=data[coin_name]["varBid"], inline=False)
        embed.add_field(name="‚Ä¢ PORCENTAGEM DE VARIA√á√ÉO", value=data[coin_name]["pctChange"], inline=False)
        embed.add_field(name="‚Ä¢ COMPRA", value=data[coin_name]["bid"], inline=False)
        embed.add_field(name="‚Ä¢ VENDA", value=data[coin_name]["ask"], inline=False)
        embed.add_field(name="‚Ä¢ ATUALIZA√á√ÉO", value=data[coin_name]["create_date"], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§COTA√á√ÉO DE MOEDAS„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')
    
    if (cotacao == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO COTA√á√ÉO„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/cotacao` e o {PAR DE MOEDA} que deseja", value='*Exemplo*: `/cotacao BRL-USD`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*O par precisa ser separado com hifen*', inline=False)        
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§COTA√á√ÉO DE MOEDAS INV√ÅLIDA„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)        

#--------------------------------------------------------[DDD]-------------------------------------------------------------#

@client.command() #CONSULTAS DE CIDADES POR DDDD
async def ddd(ctx, ddd = None):
    data = requests.get(f"https://brasilapi.com.br/api/ddd/v1/{ddd}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ ESTADO", value=data['state'], inline=False)
        embed.add_field(name="‚Ä¢ CIDADES", value='\n'.join([f"{city}" for city in data["cities"]]), inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE CIDADES POR DDD„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (ddd == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO DDD„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/ddd` e o {DDD} que deseja", value='*Exemplo*: `/ddd 11`', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§DDD INV√ÅLIDO„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)        

#--------------------------------------------------------[FERIADOS]-------------------------------------------------------------#

@client.command() #CONSULTA DE FERIADOS
async def feriados(ctx, feriados = None):
    data = requests.get(f"https://brasilapi.com.br/api/feriados/v1/{feriados}").json()

    try:
        embed = discord.Embed(title='')

        embed.add_field(name="‚Ä¢ FERIADOS", value='\n\n'.join([f"{holiday['name'].upper() + ' ‚òÖ ' + holiday['date'].replace('-', '/') + ' ‚òÖ ' + holiday['type'].replace('national', 'NACIONAL')}" for holiday in data]), inline=False)
        embed.add_field(name="‚Ä¢ INFO", value='As datas est√£o no formato Ano/M√™s/Dia (Padr√£o ISO Date)', inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§CONSULTA DE FERIADOS {feriados}„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§", icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (feriados == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO FERIADOS„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/feriados` e o {ANO}", value='*Exemplo*: `/feriados 2022`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*Suportado entre os anos 1900 e 2199*', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§„Ö§FORMATO DO ANO INV√ÅLIDO„Ö§„Ö§', icon_url='')
       embed.add_field(name="„Ö§", value="*Utilize o comando: `/feriados` para obter mais informa√ß√µes.* ", inline=False)
       return await ctx.send(embed=embed)        

#--------------------------------------------------------[GERADOR]-------------------------------------------------------------#
    
@client.command() #GERADORES
async def gerador(ctx):

    embed = discord.Embed(title='')

    embed.add_field(name="üë• GERADOR DE PESSOA", value="Use o comando `/gerarpessoa` para gerar uma pessoa.",
                    inline=False)
    embed.add_field(name="üí≥ GERADOR DE CART√ÉO",
                    value="Use o comando `/gerarcartao` para gerar um cart√£o Debito/Cr√©dito.", inline=False)
    embed.add_field(name="üìÅ GERADOR DE E-MAIL",
                    value="Use o comando `/geraremail` para gerar um e-mail aleat√≥rio.", inline=False)
    embed.add_field(name="üîÜ GERADOR DE CPF", value="Use o comando `/gerarcpf` para gerar e validar um CPF.",
                    inline=False)
    embed.add_field(name="üéÆ GERADOR DE USERNAME", value="Use o comando `/gerarusr` para gerar um username.",
                    inline=False)
    embed.add_field(name="üîê GERADOR DE SENHA", value="Use o comando `/gerarsenha` para gerar uma senha.",
                    inline=False)
    embed.add_field(name="üöô GERADOR DE VE√çCULO", value="Use o comando `/gerarveiculo` para gerar um ve√≠culo.",
                    inline=False)
    embed.add_field(name="üìû GERADOR DE N√öMERO TELEFONE",
                    value="Use o comando `/gerartel` para gerar um telefone.", inline=False)
    embed.add_field(name="üì≤ GERADOR DE IMEI", value="Use o comando `/gerarimei` para gerar um IMEI.",
                    inline=False)
    embed.set_author(name='Arctic', icon_url='')
    embed.set_footer(text='Arctic ¬© All Rights Reserved', icon_url='')
    await ctx.send(embed=embed)
    
#--------------------------------------------------------[GERADOR DE CC]-------------------------------------------------------------#
    
@client.command() #GERADOR DE CART√ÉO
async def gerarcartao(ctx, gerarcartao = None):
    data = requests.get(
        f"https://api.bincodes.com/cc-gen/?format=json&api_key=c0107d14acda7e1831dfe26ee8e8b3a5&input={gerarcartao}").json()

    try:
        embed = discord.Embed(title='')
        
        embed.add_field(name="‚Ä¢ BANDEIRA", value=data['card'], inline=False)
        embed.add_field(name="‚Ä¢ CART√ÉO", value=data['number'], inline=False)
        embed.add_field(name="„Ö§", value='üêª‚Äç‚ùÑÔ∏èÔæ†**BY ARCTIC BOT**', inline=False)                
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§GERADOR DE CART√ÉO„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§', icon_url='')
        embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)

        return
    except Exception:
        pass

        embed = discord.Embed(title='')

    if (gerarcartao == None):
        embed.set_author(name='„Ö§„Ö§„Ö§„Ö§ü§ñ COMANDO GERADOR DE CART√ÉO„Ö§„Ö§„Ö§', icon_url='')
        embed.add_field(name="Use o comando: `/gerarcartao` e a {BANDEIRA} que deseja.", value='*Exemplo*: `/gerarcartao visa`', inline=False)
        embed.add_field(name="Observa√ß√£o:", value='*Utilize apenas a bandeira!*', inline=False)        
        embed.add_field(name="Bandeiras dispon√≠veis:", value='`VISA`\n`MASTERCARD`\n`AMEX`\n`JCB`\n`DINERS`\n`MAESTRO`\n', inline=False)
        return await ctx.send(embed=embed)
    else:
       embed.set_author(name='„Ö§„Ö§„Ö§ERRO AO GERAR CART√ÉO„Ö§„Ö§„Ö§', icon_url='')
       return await ctx.send(embed=embed)

#--------------------------------------------------------[PING]-------------------------------------------------------------#

@client.command()
async def ping(ctx):
    embed = discord.Embed(title='')


    embed.add_field(name='‚Ä¢ Ping do usu√°rio', value=f"{round(client.latency * 500)} ms", inline=False)
    embed.add_field(name='‚Ä¢ Ping do servidor', value=f"{round(client.latency * 1000)} ms", inline=False)
    embed.set_author(name='„Ö§„Ö§„Ö§CONSULTA DE PING„Ö§„Ö§„Ö§„Ö§', icon_url='')
    embed.set_image(url='')
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[TRADU√á√ÉO]-------------------------------------------------------------#

@client.command() #ùê∂ùëÇùëÅùëÜùëàùêøùëáùê¥ ùê∑ùê∏ ùêπùê∏ùëÖùêºùê¥ùê∑ùëÇùëÜ
async def traduzir(ctx):    
    embed = discord.Embed(title='')
    
    embed.add_field(name="Use o comando: `/tradutor [TEXTO] L√çNGUA`", value='*Exemplo*: `/tradutor Hello en`', inline=False)
    embed.set_author(name='„Ö§„Ö§„Ö§COMANDO PARA TRADU√á√ÉO„Ö§„Ö§„Ö§„Ö§', icon_url='')
    embed.set_thumbnail(url="https://cdn.iconscout.com/icon/free/png-256/languages-1891105-1598018.png")
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[TRADU√á√ÉO]-------------------------------------------------------------#

@client.command() #ùê∂ùëÇùëÅùëÜùëàùêøùëáùê¥ ùê∑ùê∏ ùêπùê∏ùëÖùêºùê¥ùê∑ùëÇùëÜ
async def tradutor(ctx, phrase, *, lang):    
    embed = discord.Embed(title='')
    
    translator = Translator()

    phrase_translate = translator.translate(f"{phrase}", dest=lang)
    
    embed.set_thumbnail(url="https://cdn.iconscout.com/icon/free/png-256/languages-1891105-1598018.png")
    embed.add_field(name=f"TEXTO TRADUZIDO PARA {lang.upper()}", value=f"{phrase_translate.text}", inline=False)
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[GIT]-------------------------------------------------------------#

@client.command()
async def git(ctx):
    embed = discord.Embed(title='')
    
    embed.set_thumbnail(url="https://img.icons8.com/ios-glyphs/60/ffffff/github.png")
    embed.set_author(name='CONHE√áA O REPOSIT√ìRIO DOS DESENVOLVEDORES', icon_url='')
    embed.add_field(name=f"„Ö§", value=f"üëΩ ALIEN#7278 / Github: https://github.com/ALIENxp \n\nüí• el Marlboro#8779 / Github: https://github.com/victorftrdba \n\n", inline=False)
    embed.set_footer(text='Requested By {}'.format(ctx.author), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=embed)

#--------------------------------------------------------[AJUDA]-------------------------------------------------------------#

        

client.run('OTI3OTgxNzc4NDE5OTk4NzUw.YdSIYQ._9s0Rju0_2S1FJu33zohezmyc_M')